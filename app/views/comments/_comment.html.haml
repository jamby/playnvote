- if comment.try(:id) != nil
  %div{class: "comment_#{comment.id}"}
    .comment.collapsed
      %i.icon-caret-down{comment_id: comment.id}
      %em
        = link_to User.find(comment.user_id).username, user_path(User.find(comment.user_id).slug)
      
        %span{style: "padding-left: 10px;font-size: 9px;"} (#{comment.children.size} #{comment.children.size != 1 ? "children" : "child"})
    .comment.noncollapsed
      .comment-voting
        %center
          %i.icon-arrow-up.icon-large.clickable.upvote-comment{class: ("color-green" if current_user and current_user.voted_up_on? comment), user_id: current_user.id, related_game_id: comment.commentable_id, comment_id: comment.id}
          .comment-votes-cumulative{class: (("color-green" if current_user and current_user.voted_up_on? comment) or ("color-red" if current_user and current_user.voted_down_on? comment))}= comment.upvotes.size - comment.downvotes.size
          %i.icon-arrow-down.icon-large.clickable.downvote-comment{class: ("color-red" if current_user and current_user.voted_down_on? comment), user_id: current_user.id, related_game_id: comment.commentable_id, comment_id: comment.id}
      .comment-info
        %p
          %i.icon-caret-up{comment_id: comment.id}
          %strong
            = link_to User.find(comment.user_id).username, user_path(User.find(comment.user_id).slug)
      
          %span{style: "padding-left: 10px;font-size: 9px;", title: "#{comment.created_at}"} #{time_ago_in_words(comment.created_at)} ago
          %span{class: "comments-vote-numbers_#{comment.id}", style: "padding-left: 10px;font-size: 9px;"}
            (
            %span.color-green= comment.upvotes.size
            |
            %span.color-red= comment.downvotes.size
            )
        .comment-body{style: "margin-left:25px;"}
          :markdown
            #{comment.body}
        .comment-options{style: "margin-bottom: 10px;"}
          - if user_signed_in?
            - if current_user.id == comment.user_id
              = button_to "delete", related_game_comment_path(comment.commentable_id, comment), method: :delete, remote: true, class: "btn-link", style: "float:left;padding-top: 1px;"
            - if ttl_cmts.to_i <= 7
              %button.btn-link.reply-button{style: "float:left;", comment_id: comment.id} reply
          %div{style: "clear:both;"}
        .comment-reply{id: "replyto_#{comment.id}"}
          %div{style: "width: 380px;padding: 0px 15px;"}
            - if user_signed_in?
              = form_for([@relatedGame, Comment.new], remote: true) do |f|
                .form-group
                  = f.text_area :body, class: "form-control body_#{comment.id}", rows: "3"
                  = f.hidden_field :user_id, value: current_user.id
                  = f.hidden_field :parent_id, value: comment.id
                  = f.hidden_field :ttl_cmts, value: ttl_cmts
                .form-group
                  = f.submit "Submit", class: "btn btn-sm"
          %div{style: "clear:both;"}
        - if comment.has_children?
          .reply
            = render partial: 'comments/comment', collection: comment.children.sort_by{ |c| c.upvotes.size - c.downvotes.size }.reverse, as: :comment, locals: { ttl_cmts: (ttl_cmts + 1) }